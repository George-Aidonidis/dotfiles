#!/bin/sh

WORK=25
PAUSE=5
MINUTE=60
INTERACTIVE=true
TOMATO="üçÖ"
BREAK="üèñÔ∏è"

timefy() {
 ((minutes=(${1}%3600)/60))
 ((seconds=${1}%60))
 printf "%02d:%02d" "$minutes" "$seconds"
}

show_help() {
	cat <<-END
		usage: potato [-s] [-m] [-w m] [-b m] [-h]
		    -s: simple output. Intended for use in scripts
		        When enabled, potato outputs one line for each minute, and doesn't print the bell character
		        (ascii 007)
		    -w m: let work periods last m minutes (default is 25)
		    -b m: let break periods last m minutes (default is 5)
		    -h: print this message
	END
}

while getopts :sw:b:m opt; do
	case "$opt" in
	s)
		INTERACTIVE=false
	;;
	w)
		WORK=$OPTARG
	;;
	b)
		PAUSE=$OPTARG
	;;
	h|\?)
		show_help
		exit 1
	;;
	esac
done

while true
do
	for ((i=$WORK*$MINUTE; i>0; i--))
	do
		printf "%s%s\r" "$TOMATO" $(timefy $i)
		sleep 0.0001
	done

	if $INTERACTIVE; then
		read -d '' -t 0.001
		read
	fi

	for ((i=$PAUSE*$MINUTE; i>0; i--))
	do
		printf "%s%s\r" "$BREAK" $(timefy $i)
		sleep 0.01
	done

	if $INTERACTIVE; then
		read -d '' -t 0.001
		echo -e "\a"
		echo "Pause over"
		read
	fi
done
